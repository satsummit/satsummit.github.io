{"version":3,"file":"component---src-templates-speakers-hub-tsx-03543491b6b77dce8020.js","mappings":"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","sources":["webpack://satsummit.io/./src/components/page-hero.tsx","webpack://satsummit.io/./src/templates/speakers-hub.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  Container,\n  ContainerProps,\n  Divider,\n  Flex,\n  Heading,\n  Text\n} from '@chakra-ui/react';\n\nimport cloudSmallUrl from '$images/banner/banner--cloud-small@2x.png';\nimport SmartLink from './smart-link';\nimport { useEditionContext } from '$context/edition';\n\ninterface PageHeroProps\n  extends PageHeroHeadlineProps,\n    Omit<PageHeroFoundationProps, 'children'> {\n  lead?: string;\n}\n\nconst heroBg = `url('${cloudSmallUrl}') calc(100% + 20rem) bottom / auto 16rem no-repeat`;\n\nexport function PageHero(props: PageHeroProps) {\n  const { title, lead, parent, ...passthrough } = props;\n\n  return (\n    <PageHeroFoundation {...passthrough}>\n      <Flex flexFlow='column' gap='4'>\n        <PageHeroHeadline title={title} parent={parent} />\n        {lead && (\n          <Text textStyle='lead.lg' maxW='container.sm'>\n            {lead}\n          </Text>\n        )}\n      </Flex>\n    </PageHeroFoundation>\n  );\n}\n\ninterface PageHeroFoundationProps {\n  children: React.ReactNode;\n  wrapperProps?: BoxProps;\n  innerProps?: ContainerProps;\n}\n\nexport function PageHeroFoundation(props: PageHeroFoundationProps) {\n  return (\n    <Box\n      background='primary.500'\n      px={{ base: '4', md: '8' }}\n      py={{ base: '8', lg: '16' }}\n      position='relative'\n      {...props.wrapperProps}\n      _after={{\n        content: '\"\"',\n        position: 'absolute',\n        inset: 0,\n        background: heroBg,\n        zIndex: 100,\n        pointerEvents: 'none',\n        display: { base: 'none', lg: 'block' }\n      }}\n    >\n      <Container\n        maxW='container.xl'\n        color='white'\n        display='flex'\n        alignItems='center'\n        p='0'\n        {...props.innerProps}\n      >\n        {props.children}\n      </Container>\n    </Box>\n  );\n}\n\ninterface PageHeroHeadlineProps {\n  title: string;\n  parent?: {\n    title: string;\n    url: string;\n  };\n}\n\nexport function PageHeroHeadline(props: PageHeroHeadlineProps) {\n  const { title, parent } = props;\n\n  const { edition, editionCId } = useEditionContext();\n\n  return (\n    <Box>\n      <Flex alignItems='center' gap={4}>\n        {edition && (\n          <Heading\n            as={SmartLink}\n            to={`/${editionCId}`}\n            color='surface.500'\n            size='md'\n          >\n            {edition.name}\n          </Heading>\n        )}\n        {parent && edition && (\n          <Divider\n            borderColor='surface.300a'\n            size='xs'\n            h='4'\n            orientation='vertical'\n          />\n        )}\n        {parent && (\n          <Heading as={SmartLink} to={parent.url} color='surface.500' size='md'>\n            {parent.title}\n          </Heading>\n        )}\n      </Flex>\n      <Heading size='4xl' as='h1'>\n        {title}\n      </Heading>\n    </Box>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { graphql, HeadProps, PageProps } from 'gatsby';\nimport {\n  GatsbyImage,\n  getImage,\n  ImageDataLike,\n  StaticImage\n} from 'gatsby-plugin-image';\nimport {\n  Box,\n  Divider,\n  Flex,\n  Heading,\n  List,\n  ListItem,\n  Text,\n  VisuallyHidden\n} from '@chakra-ui/react';\nimport { Hug } from '@devseed-ui/hug-chakra';\n\nimport PageLayout from '$components/page-layout';\nimport Seo from '$components/seo';\nimport SmartLink from '$components/smart-link';\nimport { ChakraFade } from '$components/reveal';\nimport { PageHero } from '$components/page-hero';\n\ninterface SpeakersPageQuery extends Queries.EditionContextualDataFragment {\n  allPeople: {\n    nodes: Queries.People[];\n  };\n}\n\ninterface SpeakerPageContext {\n  editionCId: string;\n}\n\nexport default function SpeakersPage(\n  props: PageProps<SpeakersPageQuery, SpeakerPageContext>\n) {\n  const { allPeople } = props.data;\n  const { editionCId } = props.pageContext;\n\n  const { main, other } = useMemo(\n    () =>\n      allPeople.nodes.reduce<{\n        main: Queries.People[];\n        other: Queries.People[];\n      }>(\n        (acc, node) => {\n          if (node.group === 'main') {\n            acc.main.push(node);\n          } else {\n            acc.other.push(node);\n          }\n          return acc;\n        },\n        { main: [], other: [] }\n      ),\n    [allPeople.nodes]\n  );\n\n  return (\n    <PageLayout pageProps={props}>\n      <PageHero\n        title='Speakers'\n        lead='All the wonderful people presenting at SatSummit.'\n      />\n\n      <Hug py={16}>\n        <Box gridColumn='content-start / content-end'>\n          <VisuallyHidden>\n            <Heading size='xl'>Main speakers</Heading>\n          </VisuallyHidden>\n          {main.length === 0 ? (\n            <Text>\n              No one is speaking at this event yet. Check back later for\n              updates.\n            </Text>\n          ) : (\n            <List\n              display='grid'\n              gap={{ base: 4, md: 8 }}\n              gridTemplateColumns={{\n                base: 'repeat(2, 1fr)',\n                md: 'repeat(3, 1fr)',\n                xl: 'repeat(4, 1fr)'\n              }}\n            >\n              <ChakraFade direction='up' triggerOnce duration={500} delay={100}>\n                {main.map((speaker) => (\n                  <ListItem key={speaker.id} h='100%'>\n                    <Box\n                      as='article'\n                      bg='base.50'\n                      h='100%'\n                      borderRadius='sm'\n                      overflow='hidden'\n                    >\n                      <SmartLink\n                        to={`/${editionCId}/speakers/${speaker.slug}`}\n                        display='flex'\n                        flexFlow='column nowrap'\n                        height='100%'\n                        transition='opacity 0.24s ease-in-out'\n                        color='inherit'\n                        _hover={{\n                          textDecoration: 'none',\n                          opacity: 0.64\n                        }}\n                      >\n                        <Flex\n                          as='header'\n                          flexFlow='column nowrap'\n                          p={{ base: 4, md: 8 }}\n                        >\n                          <Heading as='h3' size={{ base: 'md', sm: 'xl' }}>\n                            {speaker.title}\n                          </Heading>\n                          <Text fontSize={{ base: 'sm', md: 'md' }}>\n                            {speaker.role} at {speaker.company}\n                          </Text>\n                        </Flex>\n                        {speaker.avatar ? (\n                          <Box\n                            as={GatsbyImage}\n                            image={\n                              getImage(\n                                speaker.avatar as unknown as ImageDataLike\n                              )!\n                            }\n                            alt={`Picture of ${speaker.title}`}\n                            objectFit='contain'\n                            borderRadius='sm'\n                            overflow='hidden'\n                            order={-1}\n                          />\n                        ) : (\n                          <StaticImage\n                            src='../components/speakers/user-pic-placeholder.png'\n                            alt={`Placeholder satellite icon for ${speaker.title}`}\n                            layout='fullWidth'\n                            placeholder='blurred'\n                            style={{\n                              width: '100%',\n                              order: -1\n                            }}\n                          />\n                        )}\n                      </SmartLink>\n                    </Box>\n                  </ListItem>\n                ))}\n              </ChakraFade>\n            </List>\n          )}\n        </Box>\n\n        {!!other.length && (\n          <>\n            <Divider\n              gridColumn='content-start / content-end'\n              size='md'\n              borderColor='base.200a'\n            />\n            <Flex\n              gridColumn='content-start / content-end'\n              gap={{ base: 4, md: 8 }}\n              direction='column'\n            >\n              <Heading size='3xl'>Other speakers include</Heading>\n              <List\n                display='grid'\n                gap={{ base: 4, md: 8 }}\n                gridTemplateColumns={{\n                  base: 'repeat(2, 1fr)',\n                  md: 'repeat(3, 1fr)',\n                  xl: 'repeat(4, 1fr)'\n                }}\n              >\n                <ChakraFade\n                  cascade\n                  direction='up'\n                  triggerOnce\n                  duration={500}\n                  damping={0.2}\n                >\n                  {other.map((speaker) => (\n                    <ListItem key={speaker.id}>\n                      <Box as='article'>\n                        <Flex\n                          as='header'\n                          flexFlow='column nowrap'\n                          gap={{ base: 1, md: 2 }}\n                        >\n                          <Heading as='h3' size='xl'>\n                            {speaker.title}\n                          </Heading>\n                          <Text fontSize={{ base: 'sm', md: 'md' }}>\n                            {speaker.role} at {speaker.company}\n                          </Text>\n                        </Flex>\n                      </Box>\n                    </ListItem>\n                  ))}\n                </ChakraFade>\n              </List>\n            </Flex>\n          </>\n        )}\n      </Hug>\n    </PageLayout>\n  );\n}\n\nexport const query = graphql`\n  query ($editionCId: String = \"\") {\n    ...EditionContextualData\n    allPeople(\n      filter: { published: { eq: true }, edition: { cId: { eq: $editionCId } } }\n      sort: [{ weight: DESC }, { slug: ASC }]\n    ) {\n      nodes {\n        id\n        slug\n        title\n        avatar {\n          childImageSharp {\n            gatsbyImageData(width: 640, height: 640, placeholder: BLURRED)\n          }\n        }\n        role\n        company\n        group\n      }\n    }\n  }\n`;\n\nexport const Head = (props: HeadProps<SpeakersPageQuery>) => (\n  <Seo\n    title='Speakers'\n    description='All the wonderful people presenting at SatSummit.'\n    edition={props.data.edition}\n  />\n);\n"],"names":["heroBg","cloudSmallUrl","PageHero","props","title","lead","parent","passthrough","React","PageHeroFoundation","Flex","flexFlow","gap","PageHeroHeadline","Text","textStyle","maxW","Box","Object","assign","background","px","base","md","py","lg","position","wrapperProps","_after","content","inset","zIndex","pointerEvents","display","Container","color","alignItems","p","innerProps","children","edition","editionCId","useEditionContext","Heading","as","SmartLink","to","size","name","Divider","borderColor","h","orientation","url","SpeakersPage","allPeople","data","pageContext","main","other","useMemo","nodes","reduce","acc","node","group","push","PageLayout","pageProps","Hug","gridColumn","VisuallyHidden","length","List","gridTemplateColumns","xl","ChakraFade","direction","triggerOnce","duration","delay","map","speaker","ListItem","key","id","bg","borderRadius","overflow","slug","height","transition","_hover","textDecoration","opacity","sm","fontSize","role","company","avatar","GatsbyImage","image","getImage","alt","objectFit","order","StaticImage","src","layout","placeholder","style","width","__imageData","require","cascade","damping","Head","Seo","description"],"sourceRoot":""}